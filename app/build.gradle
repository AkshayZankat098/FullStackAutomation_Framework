/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // Use TestNG framework
    testImplementation libs.testng

    // Application dependencies
    implementation libs.guava

    // Selenium & WebDriverManager
    implementation 'org.seleniumhq.selenium:selenium-java:4.25.0'
    implementation 'io.github.bonigarcia:webdrivermanager:6.1.0'

    // Logging (Log4j2 + SLF4J only, no Logback)
    implementation 'org.apache.logging.log4j:log4j-api:2.25.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.25.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.25.0'
    implementation 'org.slf4j:jcl-over-slf4j:2.0.17'

    // BDD (Cucumber)
    implementation 'io.cucumber:cucumber-java:7.23.0'
    implementation 'io.cucumber:cucumber-testng:7.23.0'

    // Testing
    testImplementation 'org.testng:testng:7.11.0'

    // API Testing
    implementation 'io.rest-assured:rest-assured:5.5.5'

    // JSON & XML parsing/validation
    implementation 'com.jayway.jsonpath:json-path:2.9.0'
    implementation 'com.google.code.gson:gson:2.13.1'
    implementation 'com.github.java-json-tools:json-schema-validator:2.2.14'
    implementation 'xml-apis:xml-apis:2.0.2'

    // OAuth
    runtimeOnly 'com.github.scribejava:scribejava-apis:8.3.3'

    // Apache HTTP Client (v5 used by RestAssured 5+)
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.1.3'

    // Assertion matchers
    implementation 'org.hamcrest:hamcrest:2.2'
}


// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
// Define the main class for the application.
    mainClass = 'qkart.automation.App'
}

test {
// Use TestNG and specify test suite file
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }

// Enable detailed test output in the console
    testLogging {
        events "passed", "failed", "skipped", "standardOut", "standardError"
        showStandardStreams = true
    }
}

